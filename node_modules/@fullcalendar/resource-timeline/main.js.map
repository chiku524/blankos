{"version":3,"file":"main.js","sources":["src/ExpanderIcon.tsx","src/spreadsheet-cell-util.ts","src/SpreadsheetIndividualCellInner.tsx","src/SpreadsheetIndividualCell.tsx","src/SpreadsheetGroupCell.tsx","src/SpreadsheetRow.tsx","src/SpreadsheetGroupRow.tsx","src/SpreadsheetHeader.tsx","src/ResourceTimelineLaneMisc.tsx","src/ResourceTimelineLane.tsx","src/DividerRow.tsx","src/ResourceTimelineLanesBody.tsx","src/ResourceTimelineLanes.tsx","src/ResourceTimelineGrid.tsx","src/ResourceTimelineViewLayout.tsx","src/ResourceTimelineView.tsx","src/main.ts"],"sourcesContent":["import { createElement, VNode, Fragment } from '@fullcalendar/common'\n\n/*\nRenders the DOM responsible for the subrow expander area,\nas well as the space before it (used to align expanders of similar depths)\n*/\nexport function ExpanderIcon({ depth, hasChildren, isExpanded, onExpanderClick }): VNode {\n  let nodes: VNode[] = []\n\n  for (let i = 0; i < depth; i += 1) {\n    nodes.push(\n      <span className=\"fc-icon\" />,\n    )\n  }\n\n  let iconClassNames = ['fc-icon']\n  if (hasChildren) {\n    if (isExpanded) {\n      iconClassNames.push('fc-icon-minus-square')\n    } else {\n      iconClassNames.push('fc-icon-plus-square')\n    }\n  }\n\n  nodes.push(\n    <span\n      className={'fc-datagrid-expander' + (hasChildren ? '' : ' fc-datagrid-expander-placeholder')}\n      onClick={onExpanderClick}\n    >\n      <span className={iconClassNames.join(' ')} />\n    </span>,\n  )\n\n  return createElement(Fragment, {}, ...nodes)\n}\n","import { ViewContext, ViewApi } from '@fullcalendar/common'\nimport { Resource, ResourceApi } from '@fullcalendar/resource-common'\n\n// hook props\n// ----------\n\nexport interface HookPropsInput {\n  resource: Resource\n  fieldValue: any\n  context: ViewContext\n}\n\nexport interface HookProps {\n  resource: ResourceApi\n  fieldValue: any\n  view: ViewApi\n}\n\nexport function refineHookProps(raw: HookPropsInput): HookProps {\n  return {\n    resource: new ResourceApi(raw.context, raw.resource),\n    fieldValue: raw.fieldValue,\n    view: raw.context.viewApi,\n  }\n}\n","import { createElement, BaseComponent, Fragment, ContentHook } from '@fullcalendar/common'\nimport { ColSpec } from '@fullcalendar/resource-common'\nimport { HookProps } from './spreadsheet-cell-util'\n\nexport interface SpreadsheetIndividualCellInnerProps {\n  hookProps: HookProps\n  colSpec: ColSpec\n}\n\nexport class SpreadsheetIndividualCellInner extends BaseComponent<SpreadsheetIndividualCellInnerProps> { // doesn't need context?\n  render() {\n    let { props } = this\n\n    return (\n      <ContentHook hookProps={props.hookProps} content={props.colSpec.cellContent} defaultContent={renderResourceInner}>\n        {(innerElRef, innerContent) => (\n          <span className=\"fc-datagrid-cell-main\" ref={innerElRef}>\n            {innerContent}\n          </span>\n        )}\n      </ContentHook>\n    )\n  }\n}\n\nfunction renderResourceInner(hookProps) {\n  return hookProps.fieldValue || <Fragment>&nbsp;</Fragment>\n}\n","import {\n  createElement, BaseComponent, CssDimValue, MountHook,\n  buildClassNameNormalizer, memoizeObjArg,\n} from '@fullcalendar/common'\nimport { Resource, ColSpec } from '@fullcalendar/resource-common'\nimport { ExpanderIcon } from './ExpanderIcon'\nimport { refineHookProps, HookProps } from './spreadsheet-cell-util'\nimport { SpreadsheetIndividualCellInner } from './SpreadsheetIndividualCellInner'\n\nexport interface SpreadsheetIndividualCellProps {\n  colSpec: ColSpec\n  resource: Resource\n  fieldValue: any\n  depth: number\n  hasChildren: boolean\n  isExpanded: boolean\n  innerHeight: CssDimValue\n}\n\n// worth making a PureComponent? (because of innerHeight)\nexport class SpreadsheetIndividualCell extends BaseComponent<SpreadsheetIndividualCellProps> {\n  refineHookProps = memoizeObjArg(refineHookProps)\n  normalizeClassNames = buildClassNameNormalizer<HookProps>()\n\n  render() {\n    let { props, context } = this\n    let { colSpec } = props\n\n    let hookProps = this.refineHookProps({\n      resource: props.resource,\n      fieldValue: props.fieldValue,\n      context,\n    })\n    let customClassNames = this.normalizeClassNames(colSpec.cellClassNames, hookProps)\n\n    return (\n      <MountHook hookProps={hookProps} didMount={colSpec.cellDidMount} willUnmount={colSpec.cellWillUnmount}>\n        {(rootElRef) => (\n          <td\n            ref={rootElRef}\n            role=\"gridcell\"\n            data-resource-id={props.resource.id}\n            className={[\n              'fc-datagrid-cell',\n              'fc-resource',\n            ].concat(customClassNames).join(' ')}\n          >\n            <div className=\"fc-datagrid-cell-frame\" style={{ height: props.innerHeight }}>\n              <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\">\n                {colSpec.isMain && (\n                  <ExpanderIcon\n                    depth={props.depth}\n                    hasChildren={props.hasChildren}\n                    isExpanded={props.isExpanded}\n                    onExpanderClick={this.onExpanderClick}\n                  />\n                )}\n                <SpreadsheetIndividualCellInner hookProps={hookProps} colSpec={colSpec} />\n              </div>\n            </div>\n          </td>\n        )}\n      </MountHook>\n    )\n  }\n\n  onExpanderClick = (ev: UIEvent) => {\n    let { props } = this\n\n    if (props.hasChildren) {\n      this.context.dispatch({\n        type: 'SET_RESOURCE_ENTITY_EXPANDED',\n        id: props.resource.id,\n        isExpanded: !props.isExpanded,\n      })\n    }\n  }\n}\n","import { createElement, BaseComponent, Fragment, RenderHook } from '@fullcalendar/common'\nimport { ColSpec, ColCellContentArg } from '@fullcalendar/resource-common'\n\nexport interface SpreadsheetGroupCellProps {\n  colSpec: ColSpec\n  fieldValue: any\n  rowSpan: number\n}\n\n// for VERTICAL cell grouping, in spreadsheet area\nexport class SpreadsheetGroupCell extends BaseComponent<SpreadsheetGroupCellProps> {\n  render() {\n    let { props, context } = this\n    let { colSpec } = props\n    let hookProps: ColCellContentArg = {\n      groupValue: props.fieldValue,\n      view: context.viewApi,\n    }\n\n    // a grouped cell. no data that is specific to this specific resource\n    // `colSpec` is for the group. a GroupSpec :(\n    return (\n      <RenderHook<ColCellContentArg>\n        hookProps={hookProps}\n        classNames={colSpec.cellClassNames}\n        content={colSpec.cellContent}\n        defaultContent={renderGroupInner}\n        didMount={colSpec.cellDidMount}\n        willUnmount={colSpec.cellWillUnmount}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => (\n          // TODO: make data-attr with group value?\n          <td\n            ref={rootElRef}\n            role=\"gridcell\"\n            rowSpan={props.rowSpan}\n            className={['fc-datagrid-cell', 'fc-resource-group'].concat(classNames).join(' ')}\n          >\n            <div className=\"fc-datagrid-cell-frame fc-datagrid-cell-frame-liquid\">\n              {/* ^needed for stickiness in some browsers */}\n              <div className=\"fc-datagrid-cell-cushion fc-sticky\" ref={innerElRef}>\n                {innerContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </RenderHook>\n    )\n  }\n}\n\nfunction renderGroupInner(hookProps) {\n  return hookProps.groupValue || <Fragment>&nbsp;</Fragment>\n}\n","import { createElement, BaseComponent, ViewContext, isArraysEqual, CssDimValue } from '@fullcalendar/common'\nimport { Resource, buildResourceFields, ColSpec, getPublicId } from '@fullcalendar/resource-common'\nimport { SpreadsheetIndividualCell } from './SpreadsheetIndividualCell'\nimport { SpreadsheetGroupCell } from './SpreadsheetGroupCell'\n\nexport interface SpreadsheetRowProps {\n  colSpecs: ColSpec[]\n  rowSpans: number[]\n  depth: number\n  isExpanded: boolean\n  hasChildren: boolean\n  resource: Resource\n  innerHeight: CssDimValue // bad name! inner vs innerinner\n}\n\nexport class SpreadsheetRow extends BaseComponent<SpreadsheetRowProps, ViewContext> {\n  render() {\n    let { props } = this\n    let { resource, rowSpans, depth } = props\n    let resourceFields = buildResourceFields(resource) // slightly inefficient. already done up the call stack\n\n    return (\n      <tr role=\"row\">\n        {props.colSpecs.map((colSpec, i) => {\n          let rowSpan = rowSpans[i]\n\n          if (rowSpan === 0) { // not responsible for group-based rows. VRowGroup is\n            return null\n          }\n\n          if (rowSpan == null) {\n            rowSpan = 1\n          }\n\n          let fieldValue = colSpec.field ? resourceFields[colSpec.field] :\n            (resource.title || getPublicId(resource.id))\n\n          if (rowSpan > 1) {\n            return (\n              <SpreadsheetGroupCell\n                key={i} // eslint-disable-line react/no-array-index-key\n                colSpec={colSpec}\n                fieldValue={fieldValue}\n                rowSpan={rowSpan}\n              />\n            )\n          }\n\n          return (\n            <SpreadsheetIndividualCell\n              key={i} // eslint-disable-line react/no-array-index-key\n              colSpec={colSpec}\n              resource={resource}\n              fieldValue={fieldValue}\n              depth={depth}\n              hasChildren={props.hasChildren}\n              isExpanded={props.isExpanded}\n              innerHeight={props.innerHeight}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n}\n\nSpreadsheetRow.addPropsEquality({\n  rowSpans: isArraysEqual,\n})\n","import { createElement, Fragment, BaseComponent, ViewContext, CssDimValue, createRef, RenderHook, RefObject } from '@fullcalendar/common'\nimport { Group, isGroupsEqual, ColCellContentArg } from '@fullcalendar/resource-common'\nimport { ExpanderIcon } from './ExpanderIcon'\n\nexport interface SpreadsheetGroupRowProps {\n  spreadsheetColCnt: number\n  id: string // 'field:value'\n  isExpanded: boolean\n  group: Group\n  innerHeight: CssDimValue\n}\n\n// for HORIZONTAL cell grouping, in spreadsheet area\nexport class SpreadsheetGroupRow extends BaseComponent<SpreadsheetGroupRowProps, ViewContext> {\n  innerInnerRef: RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n\n  render() {\n    let { props, context } = this\n    let hookProps: ColCellContentArg = { groupValue: props.group.value, view: context.viewApi }\n    let spec = props.group.spec\n\n    return (\n      <tr role=\"row\">\n        <RenderHook<ColCellContentArg>\n          hookProps={hookProps}\n          classNames={spec.labelClassNames}\n          content={spec.labelContent}\n          defaultContent={renderCellInner}\n          didMount={spec.labelDidMount}\n          willUnmount={spec.labelWillUnmount}\n        >\n          {(rootElRef, classNames, innerElRef, innerContent) => (\n            <th\n              ref={rootElRef}\n              // ARIA TODO: not really a columnheader\n              // extremely tedious to make this aria-compliant,\n              // to assign multiple headers to each cell\n              // https://www.w3.org/WAI/tutorials/tables/multi-level/\n              role=\"columnheader\"\n              scope=\"colgroup\"\n              colSpan={props.spreadsheetColCnt}\n              className={\n                [\n                  'fc-datagrid-cell',\n                  'fc-resource-group',\n                  context.theme.getClass('tableCellShaded'),\n                ].concat(classNames).join(' ')\n              }\n            >\n              <div className=\"fc-datagrid-cell-frame\" style={{ height: props.innerHeight }}>\n                <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\" ref={this.innerInnerRef}>\n                  <ExpanderIcon\n                    depth={0}\n                    hasChildren\n                    isExpanded={props.isExpanded}\n                    onExpanderClick={this.onExpanderClick}\n                  />\n                  <span className=\"fc-datagrid-cell-main\" ref={innerElRef}>\n                    {innerContent}\n                  </span>\n                </div>\n              </div>\n            </th>\n          )}\n        </RenderHook>\n      </tr>\n    )\n  }\n\n  onExpanderClick = () => {\n    let { props } = this\n\n    this.context.dispatch({\n      type: 'SET_RESOURCE_ENTITY_EXPANDED',\n      id: props.id,\n      isExpanded: !props.isExpanded,\n    })\n  }\n}\n\nSpreadsheetGroupRow.addPropsEquality({\n  group: isGroupsEqual,\n})\n\nfunction renderCellInner(hookProps) {\n  return hookProps.groupValue || <Fragment>&nbsp;</Fragment>\n}\n","import {\n  VNode, createElement, Fragment,\n  BaseComponent, ElementDragging, elementClosest, PointerDragEvent, RefMap, findElements, RenderHook,\n} from '@fullcalendar/common'\nimport { ColSpec, ColHeaderContentArg, ColHeaderRenderHooks } from '@fullcalendar/resource-common'\n\nexport interface SpreadsheetHeaderProps {\n  superHeaderRendering: ColHeaderRenderHooks\n  colSpecs: ColSpec[]\n  rowInnerHeights: number[]\n  onColWidthChange?: (colWidths: number[]) => void\n}\n\nconst SPREADSHEET_COL_MIN_WIDTH = 20\n\nexport class SpreadsheetHeader extends BaseComponent<SpreadsheetHeaderProps> {\n  private resizerElRefs = new RefMap<HTMLElement>(this._handleColResizerEl.bind(this))\n  private colDraggings: { [index: string]: ElementDragging } = {}\n\n  render() {\n    let { colSpecs, superHeaderRendering, rowInnerHeights } = this.props\n    let hookProps: ColHeaderContentArg = { view: this.context.viewApi }\n    let rowNodes: VNode[] = []\n\n    rowInnerHeights = rowInnerHeights.slice() // copy, because we're gonna pop\n\n    if (superHeaderRendering) {\n      let rowInnerHeight = rowInnerHeights.shift()\n      rowNodes.push(\n        <tr key=\"row-super\" role=\"row\">\n          <RenderHook\n            hookProps={hookProps}\n            classNames={superHeaderRendering.headerClassNames}\n            content={superHeaderRendering.headerContent}\n            didMount={superHeaderRendering.headerDidMount}\n            willUnmount={superHeaderRendering.headerWillUnmount}\n          >\n            {(rootElRef, classNames, innerElRef, innerContent) => (\n              <th\n                ref={rootElRef}\n                role=\"columnheader\"\n                scope=\"colgroup\"\n                colSpan={colSpecs.length}\n                className={[\n                  'fc-datagrid-cell',\n                  'fc-datagrid-cell-super',\n                ].concat(classNames).join(' ')}\n              >\n                <div className=\"fc-datagrid-cell-frame\" style={{ height: rowInnerHeight }}>\n                  <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\" ref={innerElRef}>\n                    {innerContent}\n                  </div>\n                </div>\n              </th>\n            )}\n          </RenderHook>\n        </tr>,\n      )\n    }\n\n    let rowInnerHeight = rowInnerHeights.shift()\n    rowNodes.push(\n      <tr key=\"row\" role=\"row\">\n        {colSpecs.map((colSpec, i) => {\n          let isLastCol = i === (colSpecs.length - 1)\n\n          // need empty inner div for abs positioning for resizer\n          return (\n            <RenderHook\n              key={i} // eslint-disable-line react/no-array-index-key\n              hookProps={hookProps}\n              classNames={colSpec.headerClassNames}\n              content={colSpec.headerContent}\n              didMount={colSpec.headerDidMount}\n              willUnmount={colSpec.headerWillUnmount}\n            >\n              {(rootElRef, classNames, innerElRef, innerContent) => (\n                <th\n                  ref={rootElRef}\n                  role=\"columnheader\"\n                  className={['fc-datagrid-cell'].concat(classNames).join(' ')}\n                >\n                  <div className=\"fc-datagrid-cell-frame\" style={{ height: rowInnerHeight }}>\n                    <div className=\"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\">\n                      {colSpec.isMain && (\n                        <span className=\"fc-datagrid-expander fc-datagrid-expander-placeholder\">\n                          <span className=\"fc-icon\" />\n                        </span>\n                      )}\n                      <span className=\"fc-datagrid-cell-main\" ref={innerElRef}>\n                        {innerContent}\n                      </span>\n                    </div>\n                    {!isLastCol &&\n                      <div className=\"fc-datagrid-cell-resizer\" ref={this.resizerElRefs.createRef(i)} />}\n                  </div>\n                </th>\n              )}\n            </RenderHook>\n          )\n        })}\n      </tr>,\n    )\n\n    return (<Fragment>{rowNodes}</Fragment>)\n  }\n\n  _handleColResizerEl(resizerEl: HTMLElement | null, index: string) {\n    let { colDraggings } = this\n\n    if (!resizerEl) {\n      let dragging = colDraggings[index]\n\n      if (dragging) {\n        dragging.destroy()\n        delete colDraggings[index]\n      }\n    } else {\n      let dragging = this.initColResizing(resizerEl, parseInt(index, 10))\n\n      if (dragging) {\n        colDraggings[index] = dragging\n      }\n    }\n  }\n\n  initColResizing(resizerEl: HTMLElement, index: number) {\n    let { pluginHooks, isRtl } = this.context\n    let { onColWidthChange } = this.props\n    let ElementDraggingImpl = pluginHooks.elementDraggingImpl\n\n    if (ElementDraggingImpl) {\n      let dragging = new ElementDraggingImpl(resizerEl)\n      let startWidth: number // of just the single column\n      let currentWidths: number[] // of all columns\n\n      dragging.emitter.on('dragstart', () => {\n        let allCells = findElements(elementClosest(resizerEl, 'tr'), 'th')\n\n        currentWidths = allCells.map((cellEl) => (\n          cellEl.getBoundingClientRect().width\n        ))\n        startWidth = currentWidths[index]\n      })\n\n      dragging.emitter.on('dragmove', (pev: PointerDragEvent) => {\n        currentWidths[index] = Math.max(startWidth + pev.deltaX * (isRtl ? -1 : 1), SPREADSHEET_COL_MIN_WIDTH)\n\n        if (onColWidthChange) {\n          onColWidthChange(currentWidths.slice()) // send a copy since currentWidths continues to be mutated\n        }\n      })\n\n      dragging.setAutoScrollEnabled(false) // because gets weird with auto-scrolling time area\n\n      return dragging\n    }\n\n    return null\n  }\n}\n","import { createElement, BaseComponent, ContentHook } from '@fullcalendar/common'\nimport { Resource, ResourceApi, ResourceLaneContentArg } from '@fullcalendar/resource-common'\n\nexport interface ResourceTimelineLaneMiscProps {\n  resource: Resource\n}\n\nexport class ResourceTimelineLaneMisc extends BaseComponent<ResourceTimelineLaneMiscProps> {\n  render() {\n    let { props, context } = this\n    let hookProps: ResourceLaneContentArg = { resource: new ResourceApi(context, props.resource) } // just easier to make directly\n\n    return (\n      <ContentHook hookProps={hookProps} content={context.options.resourceLaneContent}>\n        {(innerElRef, innerContent) => (\n          innerContent && // TODO: test how this would interfere with height\n            <div className=\"fc-timeline-lane-misc\" ref={innerElRef}>{innerContent}</div>\n        )}\n      </ContentHook>\n    )\n  }\n}\n","import {\n  createElement, Ref, BaseComponent, CssDimValue,\n  buildClassNameNormalizer, MountHook, elementClosest, memoizeObjArg,\n} from '@fullcalendar/common'\nimport { Resource, ResourceApi, ResourceLaneContentArg, ResourceLaneHookPropsInput } from '@fullcalendar/resource-common'\nimport { TimelineLane, TimelineLaneCoreProps } from '@fullcalendar/timeline'\nimport { ResourceTimelineLaneMisc } from './ResourceTimelineLaneMisc'\n\nexport interface ResourceTimelineLaneProps extends TimelineLaneCoreProps {\n  elRef: Ref<HTMLTableRowElement>\n  resource: Resource\n  innerHeight: CssDimValue\n  onHeightChange?: (rowEl: HTMLTableRowElement, isStable: boolean) => void\n}\n\nexport class ResourceTimelineLane extends BaseComponent<ResourceTimelineLaneProps> {\n  refineHookProps = memoizeObjArg(refineHookProps)\n  normalizeClassNames = buildClassNameNormalizer<ResourceLaneContentArg>()\n\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let hookProps = this.refineHookProps({ resource: props.resource, context })\n    let customClassNames = this.normalizeClassNames(options.resourceLaneClassNames, hookProps)\n\n    return (\n      <tr ref={props.elRef}>\n        <MountHook hookProps={hookProps} didMount={options.resourceLaneDidMount} willUnmount={options.resourceLaneWillUnmount}>\n          {(rootElRef) => (\n            <td\n              ref={rootElRef}\n              className={['fc-timeline-lane', 'fc-resource'].concat(customClassNames).join(' ')}\n              data-resource-id={props.resource.id}\n            >\n              <div className=\"fc-timeline-lane-frame\" style={{ height: props.innerHeight }}>\n                <ResourceTimelineLaneMisc resource={props.resource} />\n                <TimelineLane\n                  dateProfile={props.dateProfile}\n                  tDateProfile={props.tDateProfile}\n                  nowDate={props.nowDate}\n                  todayRange={props.todayRange}\n                  nextDayThreshold={props.nextDayThreshold}\n                  businessHours={props.businessHours}\n                  eventStore={props.eventStore}\n                  eventUiBases={props.eventUiBases}\n                  dateSelection={props.dateSelection}\n                  eventSelection={props.eventSelection}\n                  eventDrag={props.eventDrag}\n                  eventResize={props.eventResize}\n                  timelineCoords={props.timelineCoords}\n                  onHeightChange={this.handleHeightChange}\n                  resourceId={props.resource.id}\n                />\n              </div>\n            </td>\n          )}\n        </MountHook>\n      </tr>\n    ) // important NOT to do liquid-height. dont want to shrink height smaller than content\n  }\n\n  handleHeightChange = (innerEl: HTMLElement, isStable: boolean) => {\n    if (this.props.onHeightChange) {\n      this.props.onHeightChange(\n        // would want to use own <tr> ref, but not guaranteed to be ready when this fires\n        elementClosest(innerEl, 'tr') as HTMLTableRowElement,\n        isStable,\n      )\n    }\n  }\n}\n\nfunction refineHookProps(raw: ResourceLaneHookPropsInput): ResourceLaneContentArg {\n  return {\n    resource: new ResourceApi(raw.context, raw.resource),\n  }\n}\n","import { createElement, Ref, BaseComponent, CssDimValue, RenderHook } from '@fullcalendar/common'\nimport { GroupLaneRenderHooks, ColCellContentArg } from '@fullcalendar/resource-common'\n\nexport interface DividerRowProps {\n  elRef?: Ref<HTMLTableRowElement>\n  innerHeight: CssDimValue\n  groupValue: any\n  renderingHooks: GroupLaneRenderHooks\n}\n\n/*\nparallels the SpreadsheetGroupRow\n*/\nexport class DividerRow extends BaseComponent<DividerRowProps> {\n  render() {\n    let { props } = this\n    let { renderingHooks } = this.props\n    let hookProps: ColCellContentArg = { groupValue: props.groupValue, view: this.context.viewApi }\n\n    return (\n      <tr ref={props.elRef}>\n        <RenderHook\n          hookProps={hookProps}\n          classNames={renderingHooks.laneClassNames}\n          content={renderingHooks.laneContent}\n          didMount={renderingHooks.laneDidMount}\n          willUnmount={renderingHooks.laneWillUnmount}\n        >\n          {(rootElRef, classNames, innerElRef, innerContent) => (\n            <td\n              ref={rootElRef}\n              className={\n                [\n                  'fc-timeline-lane',\n                  'fc-resource-group',\n                  this.context.theme.getClass('tableCellShaded'),\n                ].concat(classNames).join(' ')\n              }\n            >\n              <div style={{ height: props.innerHeight }} ref={innerElRef}>\n                {innerContent}\n              </div>\n            </td>\n          )}\n        </RenderHook>\n      </tr>\n    )\n  }\n}\n","import {\n  createElement, SplittableProps, EventStore, BaseComponent, RefMap,\n  DateMarker, DateRange, DateProfile,\n} from '@fullcalendar/common'\nimport { GroupNode, ResourceNode } from '@fullcalendar/resource-common'\nimport { TimelineDateProfile, TimelineCoords } from '@fullcalendar/timeline'\nimport { ResourceTimelineLane } from './ResourceTimelineLane'\nimport { DividerRow } from './DividerRow'\n\nexport interface ResourceTimelineLanesBodyProps extends ResourceTimelineLanesContentProps {\n  rowElRefs: RefMap<HTMLElement> // indexed by NUMERICAL INDEX, not node.id\n}\n\nexport interface ResourceTimelineLanesContentProps {\n  rowNodes: (GroupNode | ResourceNode)[]\n  splitProps: { [resourceId: string]: SplittableProps }\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  fallbackBusinessHours: EventStore | null\n  innerHeights: number[]\n  slatCoords: TimelineCoords | null\n  onRowHeightChange?: (rowEl: HTMLTableRowElement, isStable: boolean) => void\n}\n\nexport class ResourceTimelineLanesBody extends BaseComponent<ResourceTimelineLanesBodyProps> { // TODO: this technique more\n  render() {\n    let { props, context } = this\n    let { rowElRefs, innerHeights } = props\n\n    return (\n      <tbody>\n        {props.rowNodes.map((node, index) => {\n          if ((node as GroupNode).group) {\n            return (\n              <DividerRow\n                key={node.id}\n                elRef={rowElRefs.createRef(node.id)}\n                groupValue={(node as GroupNode).group.value}\n                renderingHooks={(node as GroupNode).group.spec}\n                innerHeight={innerHeights[index] || ''}\n              />\n            )\n          }\n\n          if ((node as ResourceNode).resource) {\n            let resource = (node as ResourceNode).resource\n\n            return (\n              <ResourceTimelineLane\n                key={node.id}\n                elRef={rowElRefs.createRef(node.id)}\n                {...props.splitProps[resource.id]}\n                resource={resource}\n                dateProfile={props.dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={props.nowDate}\n                todayRange={props.todayRange}\n                nextDayThreshold={context.options.nextDayThreshold}\n                businessHours={resource.businessHours || props.fallbackBusinessHours}\n                innerHeight={innerHeights[index] || ''}\n                timelineCoords={props.slatCoords}\n                onHeightChange={props.onRowHeightChange}\n              />\n            )\n          }\n\n          return null\n        })}\n      </tbody>\n    )\n  }\n}\n","import { createElement, PositionCache, createRef, BaseComponent, CssDimValue, RefMap } from '@fullcalendar/common'\nimport { GroupNode, ResourceNode } from '@fullcalendar/resource-common'\nimport { ResourceTimelineLanesBody, ResourceTimelineLanesContentProps } from './ResourceTimelineLanesBody'\n\nexport interface ResourceTimelineLanesProps extends ResourceTimelineLanesContentProps {\n  minHeight: CssDimValue\n  clientWidth: number | null\n  tableMinWidth: CssDimValue\n  onRowCoords?: (rowCoords: PositionCache) => void\n}\n\nexport class ResourceTimelineLanes extends BaseComponent<ResourceTimelineLanesProps> {\n  private rootElRef = createRef<HTMLTableElement>()\n  private rowElRefs = new RefMap<HTMLElement>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <table\n        ref={this.rootElRef}\n        aria-hidden\n        className={'fc-scrollgrid-sync-table ' + context.theme.getClass('table')}\n        style={{\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth,\n          height: props.minHeight,\n        }}\n      >\n        <ResourceTimelineLanesBody\n          rowElRefs={this.rowElRefs}\n          rowNodes={props.rowNodes}\n          dateProfile={props.dateProfile}\n          tDateProfile={props.tDateProfile}\n          nowDate={props.nowDate}\n          todayRange={props.todayRange}\n          splitProps={props.splitProps}\n          fallbackBusinessHours={props.fallbackBusinessHours}\n          slatCoords={props.slatCoords}\n          innerHeights={props.innerHeights}\n          onRowHeightChange={props.onRowHeightChange}\n        />\n      </table>\n    )\n  }\n\n  componentDidMount() {\n    this.updateCoords()\n  }\n\n  componentDidUpdate() {\n    this.updateCoords()\n  }\n\n  componentWillUnmount() {\n    if (this.props.onRowCoords) {\n      this.props.onRowCoords(null)\n    }\n  }\n\n  updateCoords() {\n    let { props } = this\n\n    if (props.onRowCoords && props.clientWidth !== null) { // a populated clientWidth means sizing has stabilized\n      this.props.onRowCoords(\n        new PositionCache(\n          this.rootElRef.current,\n          collectRowEls(this.rowElRefs.currentMap, props.rowNodes),\n          false,\n          true, // isVertical\n        ),\n      )\n    }\n  }\n}\n\nfunction collectRowEls(elMap: { [key: string]: HTMLElement }, rowNodes: (GroupNode | ResourceNode)[]) {\n  return rowNodes.map((rowNode) => elMap[rowNode.id])\n}\n","import {\n  createElement, PositionCache, Duration, EventStore, DateSpan, EventUiHash, EventInteractionState,\n  DateComponent, Hit, createRef, CssDimValue, VNode, memoize, NowTimer, greatestDurationDenominator,\n  DateMarker, DateRange, NowIndicatorRoot, DateProfile, Fragment,\n} from '@fullcalendar/common'\nimport { ResourceHash, GroupNode, ResourceNode, ResourceSplitter } from '@fullcalendar/resource-common'\nimport {\n  TimelineDateProfile, TimelineCoords, TimelineSlats,\n  TimelineLaneSlicer, TimelineLaneBg, TimelineLaneSeg,\n  coordToCss,\n} from '@fullcalendar/timeline'\nimport { ResourceTimelineLanes } from './ResourceTimelineLanes'\n\nexport interface ResourceTimelineGridProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  rowNodes: (GroupNode | ResourceNode)[]\n  businessHours: EventStore | null\n  dateSelection: DateSpan | null\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  resourceStore: ResourceHash\n  nextDayThreshold: Duration\n  clientWidth: number | null\n  clientHeight: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  expandRows: boolean\n  rowInnerHeights: number[]\n  onSlatCoords?: (slatCoords: TimelineCoords) => void\n  onRowCoords?: (rowCoords: PositionCache) => void\n  onScrollLeftRequest?: (scrollLeft: number) => void\n  onRowHeightChange?: (rowEl: HTMLTableRowElement, isStable: boolean) => void\n}\n\ninterface ResourceTimelineGridState {\n  slatCoords: TimelineCoords | null\n}\n\nexport class ResourceTimelineGrid extends DateComponent<ResourceTimelineGridProps, ResourceTimelineGridState> {\n  private computeHasResourceBusinessHours = memoize(computeHasResourceBusinessHours)\n  private resourceSplitter = new ResourceSplitter() // doesn't let it do businessHours tho\n  private bgSlicer = new TimelineLaneSlicer()\n  private slatsRef = createRef<TimelineSlats>() // needed for Hit creation :(\n  private rowCoords: PositionCache // for queryHit\n\n  state: ResourceTimelineGridState = {\n    slatCoords: null,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { dateProfile, tDateProfile } = props\n    let timerUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit\n    let hasResourceBusinessHours = this.computeHasResourceBusinessHours(props.rowNodes)\n\n    let splitProps = this.resourceSplitter.splitProps(props)\n    let bgLaneProps = splitProps['']\n    let bgSlicedProps = this.bgSlicer.sliceProps(\n      bgLaneProps,\n      dateProfile,\n      tDateProfile.isTimeScale ? null : props.nextDayThreshold,\n      context, // wish we didn't need to pass in the rest of these args...\n      dateProfile,\n      context.dateProfileGenerator,\n      tDateProfile,\n      context.dateEnv,\n    )\n\n    // WORKAROUND: make ignore slatCoords when out of sync with dateProfile\n    let slatCoords = state.slatCoords && state.slatCoords.dateProfile === props.dateProfile ? state.slatCoords : null\n\n    return (\n      <div\n        ref={this.handleEl}\n        className={[\n          'fc-timeline-body',\n          props.expandRows ? 'fc-timeline-body-expandrows' : '',\n        ].join(' ')}\n        style={{ minWidth: props.tableMinWidth }}\n      >\n        <NowTimer unit={timerUnit}>\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <TimelineSlats\n                ref={this.slatsRef}\n                dateProfile={dateProfile}\n                tDateProfile={tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                clientWidth={props.clientWidth}\n                tableColGroupNode={props.tableColGroupNode}\n                tableMinWidth={props.tableMinWidth}\n                onCoords={this.handleSlatCoords}\n                onScrollLeftRequest={props.onScrollLeftRequest}\n              />\n              <TimelineLaneBg\n                businessHourSegs={hasResourceBusinessHours ? null : bgSlicedProps.businessHourSegs}\n                bgEventSegs={bgSlicedProps.bgEventSegs}\n                timelineCoords={slatCoords}\n                // empty array will result in unnecessary rerenders?\n                eventResizeSegs={(bgSlicedProps.eventResize ? bgSlicedProps.eventResize.segs as TimelineLaneSeg[] : [])}\n                dateSelectionSegs={bgSlicedProps.dateSelectionSegs}\n                nowDate={nowDate}\n                todayRange={todayRange}\n              />\n              <ResourceTimelineLanes\n                rowNodes={props.rowNodes}\n                dateProfile={dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                splitProps={splitProps}\n                fallbackBusinessHours={hasResourceBusinessHours ? props.businessHours : null}\n                clientWidth={props.clientWidth}\n                minHeight={props.expandRows ? props.clientHeight : ''}\n                tableMinWidth={props.tableMinWidth}\n                innerHeights={props.rowInnerHeights}\n                slatCoords={slatCoords}\n                onRowCoords={this.handleRowCoords}\n                onRowHeightChange={props.onRowHeightChange}\n              />\n              {(context.options.nowIndicator && slatCoords && slatCoords.isDateInRange(nowDate)) && (\n                <div className=\"fc-timeline-now-indicator-container\">\n                  <NowIndicatorRoot isAxis={false} date={nowDate}>\n                    {(rootElRef, classNames, innerElRef, innerContent) => (\n                      <div\n                        ref={rootElRef}\n                        className={['fc-timeline-now-indicator-line'].concat(classNames).join(' ')}\n                        style={coordToCss(slatCoords.dateToCoord(nowDate), context.isRtl)}\n                      >\n                        {innerContent}\n                      </div>\n                    )}\n                  </NowIndicatorRoot>\n                </div>\n              )}\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleEl = (el: HTMLElement | null) => {\n    if (el) {\n      this.context.registerInteractiveComponent(this, { el })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  handleSlatCoords = (slatCoords: TimelineCoords | null) => {\n    this.setState({ slatCoords })\n\n    if (this.props.onSlatCoords) {\n      this.props.onSlatCoords(slatCoords)\n    }\n  }\n\n  handleRowCoords = (rowCoords: PositionCache | null) => {\n    this.rowCoords = rowCoords\n\n    if (this.props.onRowCoords) {\n      this.props.onRowCoords(rowCoords)\n    }\n  }\n\n  // Hit System\n  // ------------------------------------------------------------------------------------------\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let rowCoords = this.rowCoords\n    let rowIndex = rowCoords.topToIndex(positionTop)\n\n    if (rowIndex != null) {\n      let resource = (this.props.rowNodes[rowIndex] as ResourceNode).resource\n\n      if (resource) { // not a group\n        let slatHit = this.slatsRef.current.positionToHit(positionLeft)\n\n        if (slatHit) {\n          return {\n            dateProfile: this.props.dateProfile,\n            dateSpan: {\n              range: slatHit.dateSpan.range,\n              allDay: slatHit.dateSpan.allDay,\n              resourceId: resource.id,\n            },\n            rect: {\n              left: slatHit.left,\n              right: slatHit.right,\n              top: rowCoords.tops[rowIndex],\n              bottom: rowCoords.bottoms[rowIndex],\n            },\n            dayEl: slatHit.dayEl,\n            layer: 0,\n          }\n        }\n      }\n    }\n\n    return null\n  }\n}\n\nfunction computeHasResourceBusinessHours(rowNodes: (GroupNode | ResourceNode)[]) {\n  for (let node of rowNodes) {\n    let resource = (node as ResourceNode).resource\n\n    if (resource && resource.businessHours) {\n      return true\n    }\n  }\n\n  return false\n}\n","import {\n  createElement, createRef, ElementDragging, PointerDragEvent, BaseComponent, ColProps,\n  ChunkConfigRowContent, ChunkConfigContent, ScrollGridSectionConfig,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  config,\n} from '@fullcalendar/common'\nimport { ScrollGrid } from '@fullcalendar/scrollgrid'\n\nconst MIN_RESOURCE_AREA_WIDTH = 30 // definitely bigger than scrollbars\n\nexport interface ResourceTimelineViewLayoutProps {\n  spreadsheetCols: ColProps[]\n  spreadsheetHeaderRows: ChunkConfigRowContent\n  spreadsheetBodyRows: ChunkConfigRowContent\n  timeCols: ColProps[]\n  timeHeaderContent: ChunkConfigContent\n  timeBodyContent: ChunkConfigContent\n  forPrint: boolean\n  isHeightAuto: boolean\n}\n\ninterface ResourceTimelineViewLayoutState {\n  resourceAreaWidthOverride: number | null\n}\n\n// RENAME?\nexport class ResourceTimelineViewLayout extends BaseComponent<ResourceTimelineViewLayoutProps, ResourceTimelineViewLayoutState> {\n  private scrollGridRef = createRef<ScrollGrid>()\n  private timeBodyScrollerElRef = createRef<HTMLDivElement>()\n  private spreadsheetHeaderChunkElRef = createRef<HTMLTableCellElement>()\n  private spreadsheetResizerDragging: ElementDragging\n  private rootElRef = createRef<HTMLElement>()\n  private ensureScrollGridResizeId: number = 0\n\n  state = {\n    resourceAreaWidthOverride: null,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(options)\n\n    let sections: ScrollGridSectionConfig[] = [\n      {\n        type: 'header',\n        key: 'header',\n        syncRowHeights: true,\n        isSticky: stickyHeaderDates,\n        chunks: [\n          {\n            key: 'datagrid',\n            elRef: this.spreadsheetHeaderChunkElRef,\n            // TODO: allow the content to specify this. have general-purpose 'content' with obj with keys\n            tableClassName: 'fc-datagrid-header',\n            rowContent: props.spreadsheetHeaderRows,\n          },\n          {\n            key: 'divider',\n            outerContent: (\n              <td role=\"presentation\" className={'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')} />\n            ),\n          },\n          {\n            key: 'timeline',\n            content: props.timeHeaderContent,\n          },\n        ],\n      },\n      {\n        type: 'body',\n        key: 'body',\n        syncRowHeights: true,\n        liquid: true,\n        expandRows: Boolean(options.expandRows),\n        chunks: [\n          {\n            key: 'datagrid',\n            tableClassName: 'fc-datagrid-body',\n            rowContent: props.spreadsheetBodyRows,\n          },\n          {\n            key: 'divider',\n            outerContent: (\n              <td role=\"presentation\" className={'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')} />\n            ),\n          },\n          {\n            key: 'timeline',\n            scrollerElRef: this.timeBodyScrollerElRef,\n            content: props.timeBodyContent,\n          },\n        ],\n      },\n    ]\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [\n          {\n            key: 'datagrid',\n            content: renderScrollShim,\n          },\n          {\n            key: 'divider',\n            outerContent: (\n              <td role=\"presentation\" className={'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')} />\n            ),\n          },\n          {\n            key: 'timeline',\n            content: renderScrollShim,\n          },\n        ],\n      })\n    }\n\n    let resourceAreaWidth = state.resourceAreaWidthOverride != null\n      ? state.resourceAreaWidthOverride\n      : options.resourceAreaWidth\n\n    return (\n      <ScrollGrid\n        ref={this.scrollGridRef}\n        elRef={this.rootElRef}\n        liquid={!props.isHeightAuto && !props.forPrint}\n        collapsibleWidth={false}\n        colGroups={[\n          { cols: props.spreadsheetCols, width: resourceAreaWidth },\n          { cols: [] }, // for the divider\n          { cols: props.timeCols },\n        ]}\n        sections={sections}\n      />\n    )\n  }\n\n  forceTimeScroll(left: number) {\n    let scrollGrid = this.scrollGridRef.current\n    scrollGrid.forceScrollLeft(2, left) // 2 = the time area\n  }\n\n  forceResourceScroll(top: number) {\n    let scrollGrid = this.scrollGridRef.current\n    scrollGrid.forceScrollTop(1, top) // 1 = the body\n  }\n\n  getResourceScroll(): number {\n    let timeBodyScrollerEl = this.timeBodyScrollerElRef.current\n    return timeBodyScrollerEl.scrollTop\n  }\n\n  // Resource Area Resizing\n  // ------------------------------------------------------------------------------------------\n  // NOTE: a callback Ref for the resizer was firing multiple times with same elements (Preact)\n  // that's why we use spreadsheetResizerElRef instead\n\n  componentDidMount() {\n    this.initSpreadsheetResizing()\n  }\n\n  componentWillUnmount() {\n    this.destroySpreadsheetResizing()\n  }\n\n  initSpreadsheetResizing() {\n    let { isRtl, pluginHooks } = this.context\n    let ElementDraggingImpl = pluginHooks.elementDraggingImpl\n    let spreadsheetHeadEl = this.spreadsheetHeaderChunkElRef.current\n\n    if (ElementDraggingImpl) {\n      let rootEl = this.rootElRef.current\n      let dragging = this.spreadsheetResizerDragging = new ElementDraggingImpl(rootEl, '.fc-resource-timeline-divider')\n      let dragStartWidth\n      let viewWidth\n\n      dragging.emitter.on('dragstart', () => {\n        dragStartWidth = spreadsheetHeadEl.getBoundingClientRect().width\n        viewWidth = rootEl.getBoundingClientRect().width\n      })\n\n      dragging.emitter.on('dragmove', (pev: PointerDragEvent) => {\n        let newWidth = dragStartWidth + pev.deltaX * (isRtl ? -1 : 1)\n        newWidth = Math.max(newWidth, MIN_RESOURCE_AREA_WIDTH)\n        newWidth = Math.min(newWidth, viewWidth - MIN_RESOURCE_AREA_WIDTH)\n\n        // scrollgrid will ignore resize requests if there are too many :|\n        this.setState({\n          resourceAreaWidthOverride: newWidth,\n        }, this.ensureScrollGridResize)\n      })\n\n      dragging.setAutoScrollEnabled(false) // because gets weird with auto-scrolling time area\n    }\n  }\n\n  destroySpreadsheetResizing() {\n    if (this.spreadsheetResizerDragging) {\n      this.spreadsheetResizerDragging.destroy()\n    }\n  }\n\n  /*\n  ghetto debounce. don't race with ScrollGrid's resizing delay. solves #6140\n  */\n  ensureScrollGridResize = () => {\n    if (this.ensureScrollGridResizeId) {\n      clearTimeout(this.ensureScrollGridResizeId)\n    }\n    this.ensureScrollGridResizeId = setTimeout(() => {\n      this.scrollGridRef.current.handleSizing(false)\n    }, config.SCROLLGRID_RESIZE_INTERVAL + 1)\n  }\n}\n","import {\n  createElement, createRef, ViewContext, memoize,\n  Fragment, CssDimValue, ChunkContentCallbackArgs, isArraysEqual, PositionCache,\n  ScrollRequest, ScrollResponder, ViewRoot, BaseComponent, ViewOptionsRefined,\n} from '@fullcalendar/common'\nimport {\n  buildTimelineDateProfile, TimelineHeader,\n  buildSlatCols,\n  TimelineCoords,\n  TimelineDateProfile,\n} from '@fullcalendar/timeline'\nimport {\n  GroupNode, ResourceNode, ResourceViewProps, buildRowNodes,\n  ColSpec, GroupSpec, DEFAULT_RESOURCE_ORDER,\n} from '@fullcalendar/resource-common'\nimport { __assign } from 'tslib'\nimport { SpreadsheetRow } from './SpreadsheetRow'\nimport { SpreadsheetGroupRow } from './SpreadsheetGroupRow'\nimport { SpreadsheetHeader } from './SpreadsheetHeader'\nimport { ResourceTimelineGrid } from './ResourceTimelineGrid'\nimport { ResourceTimelineViewLayout } from './ResourceTimelineViewLayout'\n\ninterface ResourceTimelineViewState {\n  resourceAreaWidth: CssDimValue\n  spreadsheetColWidths: number[]\n  slatCoords?: TimelineCoords\n  slotCushionMaxWidth?: number\n}\n\ninterface ResourceTimelineViewSnapshot {\n  resourceScroll?: ResourceScrollState\n}\n\ninterface ResourceScrollState {\n  rowId: string\n  fromBottom: number\n}\n\nexport class ResourceTimelineView extends BaseComponent<ResourceViewProps, ResourceTimelineViewState> {\n  private processColOptions = memoize(processColOptions)\n  private buildTimelineDateProfile = memoize(buildTimelineDateProfile)\n  private hasNesting = memoize(hasNesting)\n  private buildRowNodes = memoize(buildRowNodes)\n  private layoutRef = createRef<ResourceTimelineViewLayout>()\n  private rowNodes: (GroupNode | ResourceNode)[] = []\n  private renderedRowNodes: (GroupNode | ResourceNode)[] = []\n  private buildRowIndex = memoize(buildRowIndex)\n  private rowCoords: PositionCache\n  private scrollResponder: ScrollResponder\n\n  constructor(props: ResourceViewProps, context: ViewContext) {\n    super(props, context)\n\n    this.state = {\n      resourceAreaWidth: context.options.resourceAreaWidth,\n      spreadsheetColWidths: [],\n    }\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options, viewSpec } = context\n    let { superHeaderRendering, groupSpecs, orderSpecs, isVGrouping, colSpecs } = this.processColOptions(context.options)\n\n    let tDateProfile = this.buildTimelineDateProfile(\n      props.dateProfile,\n      context.dateEnv,\n      options,\n      context.dateProfileGenerator,\n    )\n\n    let rowNodes = this.rowNodes = this.buildRowNodes(\n      props.resourceStore,\n      groupSpecs,\n      orderSpecs,\n      isVGrouping,\n      props.resourceEntityExpansions,\n      options.resourcesInitiallyExpanded,\n    )\n\n    let extraClassNames = [\n      'fc-resource-timeline',\n      this.hasNesting(rowNodes) ? '' : 'fc-resource-timeline-flat', // flat means there's no nesting\n      'fc-timeline',\n      options.eventOverlap === false ? 'fc-timeline-overlap-disabled' : 'fc-timeline-overlap-enabled',\n    ]\n\n    let { slotMinWidth } = options\n    let slatCols = buildSlatCols(tDateProfile, slotMinWidth || this.computeFallbackSlotMinWidth(tDateProfile))\n\n    return (\n      <ViewRoot viewSpec={viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={extraClassNames.concat(classNames).join(' ')}>\n            <ResourceTimelineViewLayout\n              ref={this.layoutRef}\n              forPrint={props.forPrint}\n              isHeightAuto={props.isHeightAuto}\n              spreadsheetCols={\n                buildSpreadsheetCols(colSpecs, state.spreadsheetColWidths, '')\n              }\n              spreadsheetHeaderRows={(contentArg: ChunkContentCallbackArgs) => (\n                <SpreadsheetHeader // TODO: rename to SpreadsheetHeaderRows\n                  superHeaderRendering={superHeaderRendering}\n                  colSpecs={colSpecs}\n                  onColWidthChange={this.handleColWidthChange}\n                  rowInnerHeights={contentArg.rowSyncHeights}\n                />\n              )}\n              spreadsheetBodyRows={(contentArg: ChunkContentCallbackArgs) => (\n                <Fragment>\n                  {this.renderSpreadsheetRows(rowNodes, colSpecs, contentArg.rowSyncHeights)}\n                </Fragment>\n              )}\n              timeCols={slatCols}\n              timeHeaderContent={(contentArg: ChunkContentCallbackArgs) => (\n                <TimelineHeader\n                  clientWidth={contentArg.clientWidth}\n                  clientHeight={contentArg.clientHeight}\n                  tableMinWidth={contentArg.tableMinWidth}\n                  tableColGroupNode={contentArg.tableColGroupNode}\n                  dateProfile={props.dateProfile}\n                  tDateProfile={tDateProfile}\n                  slatCoords={state.slatCoords}\n                  rowInnerHeights={contentArg.rowSyncHeights}\n                  onMaxCushionWidth={slotMinWidth ? null : this.handleMaxCushionWidth}\n                />\n              )}\n              timeBodyContent={(contentArg: ChunkContentCallbackArgs) => (\n                <ResourceTimelineGrid\n                  dateProfile={props.dateProfile}\n                  clientWidth={contentArg.clientWidth}\n                  clientHeight={contentArg.clientHeight}\n                  tableMinWidth={contentArg.tableMinWidth}\n                  tableColGroupNode={contentArg.tableColGroupNode}\n                  expandRows={contentArg.expandRows}\n                  tDateProfile={tDateProfile}\n                  rowNodes={rowNodes}\n                  businessHours={props.businessHours}\n                  dateSelection={props.dateSelection}\n                  eventStore={props.eventStore}\n                  eventUiBases={props.eventUiBases}\n                  eventSelection={props.eventSelection}\n                  eventDrag={props.eventDrag}\n                  eventResize={props.eventResize}\n                  resourceStore={props.resourceStore}\n                  nextDayThreshold={context.options.nextDayThreshold}\n                  rowInnerHeights={contentArg.rowSyncHeights}\n                  onSlatCoords={this.handleSlatCoords}\n                  onRowCoords={this.handleRowCoords}\n                  onScrollLeftRequest={this.handleScrollLeftRequest}\n                  onRowHeightChange={contentArg.reportRowHeightChange}\n                />\n              )}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderSpreadsheetRows(nodes: (ResourceNode | GroupNode)[], colSpecs: ColSpec[], rowSyncHeights: number[]) {\n    return nodes.map((node, index) => {\n      if ((node as GroupNode).group) {\n        return (\n          <SpreadsheetGroupRow\n            key={node.id}\n            id={node.id}\n            spreadsheetColCnt={colSpecs.length}\n            isExpanded={node.isExpanded}\n            group={(node as GroupNode).group}\n            innerHeight={rowSyncHeights[index] || ''}\n          />\n        )\n      }\n\n      if ((node as ResourceNode).resource) {\n        return (\n          <SpreadsheetRow\n            key={node.id}\n            colSpecs={colSpecs}\n            rowSpans={(node as ResourceNode).rowSpans}\n            depth={(node as ResourceNode).depth}\n            isExpanded={node.isExpanded}\n            hasChildren={(node as ResourceNode).hasChildren}\n            resource={(node as ResourceNode).resource}\n            innerHeight={rowSyncHeights[index] || ''}\n          />\n        )\n      }\n\n      return null\n    })\n  }\n\n  componentDidMount() {\n    this.renderedRowNodes = this.rowNodes\n    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest)\n  }\n\n  getSnapshotBeforeUpdate(): ResourceTimelineViewSnapshot {\n    if (!this.props.forPrint) { // because print-view is always zero?\n      return { resourceScroll: this.queryResourceScroll() }\n    }\n    return {}\n  }\n\n  componentDidUpdate(prevProps: ResourceViewProps, prevState: ResourceTimelineViewState, snapshot: ResourceTimelineViewSnapshot) {\n    this.renderedRowNodes = this.rowNodes\n\n    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile)\n\n    if (snapshot.resourceScroll) {\n      this.handleScrollRequest(snapshot.resourceScroll) // TODO: this gets triggered too often\n    }\n  }\n\n  componentWillUnmount() {\n    this.scrollResponder.detach()\n  }\n\n  handleSlatCoords = (slatCoords: TimelineCoords) => {\n    this.setState({ slatCoords })\n  }\n\n  handleRowCoords = (rowCoords: PositionCache) => {\n    this.rowCoords = rowCoords\n    this.scrollResponder.update(false) // TODO: could eliminate this if rowCoords lived in state\n  }\n\n  handleMaxCushionWidth = (slotCushionMaxWidth) => {\n    this.setState({\n      slotCushionMaxWidth: Math.ceil(slotCushionMaxWidth), // for less rerendering TODO: DRY\n    })\n  }\n\n  computeFallbackSlotMinWidth(tDateProfile: TimelineDateProfile) { // TODO: duplicate definition\n    return Math.max(30, ((this.state.slotCushionMaxWidth || 0) / tDateProfile.slotsPerLabel))\n  }\n\n  // Scrolling\n  // ------------------------------------------------------------------------------------------------------------------\n  // this is useful for scrolling prev/next dates while resource is scrolled down\n\n  handleScrollLeftRequest = (scrollLeft: number) => { // for ResourceTimelineGrid\n    let layout = this.layoutRef.current\n    layout.forceTimeScroll(scrollLeft)\n  }\n\n  handleScrollRequest = (request: ScrollRequest & ResourceScrollState) => { // only handles resource scroll\n    let { rowCoords } = this\n    let layout = this.layoutRef.current\n    let rowId = request.rowId || request.resourceId\n\n    if (rowCoords) {\n      if (rowId) {\n        let rowIdToIndex = this.buildRowIndex(this.renderedRowNodes)\n        let index = rowIdToIndex[rowId]\n\n        if (index != null) {\n          let scrollTop =\n            (request.fromBottom != null ?\n              rowCoords.bottoms[index] - request.fromBottom : // pixels from bottom edge\n              rowCoords.tops[index] // just use top edge\n            )\n          layout.forceResourceScroll(scrollTop)\n        }\n      }\n\n      return true\n    }\n    return null\n  }\n\n  queryResourceScroll(): ResourceScrollState {\n    let { rowCoords, renderedRowNodes } = this\n\n    if (rowCoords) {\n      let layout = this.layoutRef.current\n      let trBottoms = rowCoords.bottoms\n      let scrollTop = layout.getResourceScroll()\n      let scroll = {} as any\n\n      for (let i = 0; i < trBottoms.length; i += 1) {\n        let rowNode = renderedRowNodes[i]\n        let elBottom = trBottoms[i] - scrollTop // from the top of the scroller\n\n        if (elBottom > 0) {\n          scroll.rowId = rowNode.id\n          scroll.fromBottom = elBottom\n          break\n        }\n      }\n\n      return scroll\n    }\n    return null\n  }\n\n  // Resource INDIVIDUAL-Column Area Resizing\n  // ------------------------------------------------------------------------------------------\n\n  handleColWidthChange = (colWidths: number[]) => {\n    this.setState({\n      spreadsheetColWidths: colWidths,\n    })\n  }\n}\n\nResourceTimelineView.addStateEquality({\n  spreadsheetColWidths: isArraysEqual,\n})\n\nfunction buildRowIndex(rowNodes: (GroupNode | ResourceNode)[]) {\n  let rowIdToIndex: { [id: string]: number } = {}\n\n  for (let i = 0; i < rowNodes.length; i += 1) {\n    rowIdToIndex[rowNodes[i].id] = i\n  }\n\n  return rowIdToIndex\n}\n\nfunction buildSpreadsheetCols(colSpecs: ColSpec[], forcedWidths: number[], fallbackWidth: CssDimValue = '') {\n  return colSpecs.map((colSpec, i) => ({\n    className: colSpec.isMain ? 'fc-main-col' : '',\n    width: forcedWidths[i] || colSpec.width || fallbackWidth,\n  }))\n}\n\nfunction hasNesting(nodes: (GroupNode | ResourceNode)[]) {\n  for (let node of nodes) {\n    if ((node as GroupNode).group) {\n      return true\n    }\n\n    if ((node as ResourceNode).resource) {\n      if ((node as ResourceNode).hasChildren) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nfunction processColOptions(options: ViewOptionsRefined) {\n  let allColSpecs: ColSpec[] = options.resourceAreaColumns || []\n  let superHeaderRendering = null\n\n  if (!allColSpecs.length) {\n    allColSpecs.push({\n      headerClassNames: options.resourceAreaHeaderClassNames,\n      headerContent: options.resourceAreaHeaderContent || 'Resources', // TODO: view.defaults\n      headerDidMount: options.resourceAreaHeaderDidMount,\n      headerWillUnmount: options.resourceAreaHeaderWillUnmount,\n    })\n  } else if (options.resourceAreaHeaderContent) { // weird way to determine if content\n    superHeaderRendering = {\n      headerClassNames: options.resourceAreaHeaderClassNames,\n      headerContent: options.resourceAreaHeaderContent,\n      headerDidMount: options.resourceAreaHeaderDidMount,\n      headerWillUnmount: options.resourceAreaHeaderWillUnmount,\n    }\n  }\n\n  let plainColSpecs: ColSpec[] = []\n  let groupColSpecs: ColSpec[] = [] // part of the colSpecs, but filtered out in order to put first\n  let groupSpecs: GroupSpec[] = []\n  let isVGrouping = false\n\n  for (let colSpec of allColSpecs) {\n    if (colSpec.group) {\n      groupColSpecs.push({\n        ...colSpec,\n        cellClassNames: colSpec.cellClassNames || options.resourceGroupLabelClassNames,\n        cellContent: colSpec.cellContent || options.resourceGroupLabelContent,\n        cellDidMount: colSpec.cellDidMount || options.resourceGroupLabelDidMount,\n        cellWillUnmount: colSpec.cellWillUnmount || options.resourceGroupLaneWillUnmount,\n      })\n    } else {\n      plainColSpecs.push(colSpec)\n    }\n  }\n\n  // BAD: mutates a user-supplied option\n  let mainColSpec = plainColSpecs[0]\n  mainColSpec.isMain = true\n  mainColSpec.cellClassNames = mainColSpec.cellClassNames || options.resourceLabelClassNames\n  mainColSpec.cellContent = mainColSpec.cellContent || options.resourceLabelContent\n  mainColSpec.cellDidMount = mainColSpec.cellDidMount || options.resourceLabelDidMount\n  mainColSpec.cellWillUnmount = mainColSpec.cellWillUnmount || options.resourceLabelWillUnmount\n\n  if (groupColSpecs.length) {\n    groupSpecs = groupColSpecs\n    isVGrouping = true\n  } else {\n    let hGroupField = options.resourceGroupField\n    if (hGroupField) {\n      groupSpecs.push({\n        field: hGroupField,\n\n        labelClassNames: options.resourceGroupLabelClassNames,\n        labelContent: options.resourceGroupLabelContent,\n        labelDidMount: options.resourceGroupLabelDidMount,\n        labelWillUnmount: options.resourceGroupLabelWillUnmount,\n\n        laneClassNames: options.resourceGroupLaneClassNames,\n        laneContent: options.resourceGroupLaneContent,\n        laneDidMount: options.resourceGroupLaneDidMount,\n        laneWillUnmount: options.resourceGroupLaneWillUnmount,\n      })\n    }\n  }\n\n  let allOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER\n  let plainOrderSpecs = []\n\n  for (let orderSpec of allOrderSpecs) {\n    let isGroup = false\n    for (let groupSpec of groupSpecs) {\n      if (groupSpec.field === orderSpec.field) {\n        groupSpec.order = orderSpec.order // -1, 0, 1\n        isGroup = true\n        break\n      }\n    }\n    if (!isGroup) {\n      plainOrderSpecs.push(orderSpec)\n    }\n  }\n\n  return {\n    superHeaderRendering,\n    isVGrouping,\n    groupSpecs,\n    colSpecs: groupColSpecs.concat(plainColSpecs),\n    orderSpecs: plainOrderSpecs,\n  }\n}\n","import { createPlugin } from '@fullcalendar/common'\n\nimport premiumCommonPlugin from '@fullcalendar/premium-common' // eslint-disable-line import/no-duplicates\n// ensure ambient declarations\nimport '@fullcalendar/premium-common' // eslint-disable-line import/no-duplicates\n\nimport timelinePlugin from '@fullcalendar/timeline'\nimport resourceCommonPlugin from '@fullcalendar/resource-common'\nimport { ResourceTimelineView } from './ResourceTimelineView'\nimport './main.css'\n\nexport { ResourceTimelineView }\nexport { ResourceTimelineLane } from './ResourceTimelineLane'\nexport { SpreadsheetRow } from './SpreadsheetRow'\n\nexport default createPlugin({\n  deps: [\n    premiumCommonPlugin,\n    resourceCommonPlugin,\n    timelinePlugin,\n  ],\n  initialView: 'resourceTimelineDay',\n  views: {\n\n    resourceTimeline: {\n      type: 'timeline', // inherit configuration\n      component: ResourceTimelineView,\n      needsResourceData: true,\n      resourceAreaWidth: '30%',\n      resourcesInitiallyExpanded: true,\n      eventResizableFromStart: true, // TODO: not DRY with this same setting in the main timeline config\n    },\n\n    resourceTimelineDay: {\n      type: 'resourceTimeline',\n      duration: { days: 1 },\n    },\n\n    resourceTimelineWeek: {\n      type: 'resourceTimeline',\n      duration: { weeks: 1 },\n    },\n\n    resourceTimelineMonth: {\n      type: 'resourceTimeline',\n      duration: { months: 1 },\n    },\n\n    resourceTimelineYear: {\n      type: 'resourceTimeline',\n      duration: { years: 1 },\n    },\n\n  },\n})\n"],"names":["refineHookProps"],"mappings":"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"}